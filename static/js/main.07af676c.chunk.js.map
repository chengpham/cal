{"version":3,"sources":["index.js"],"names":["keypad","clear","divide","multiply","seven","eight","nine","subtract","four","five","six","add","one","two","three","blank","zero","decimal","equals","App","props","state","output","event","key","target","id","lastIndex","this","length","test","setState","concat","eval","join","includes","slice","indexOf","Object","entries","map","i","class","onClick","handleNum","bind","React","Component","ReactDOM","render","document","getElementById"],"mappings":"m6CAIMA,OAAS,CACbC,MAAO,KAAMC,OAAQ,IAAKC,SAAU,IAAKC,MAAO,IAAKC,MAAO,IAAKC,KAAM,IAAKC,SAAU,IAAKC,KAAM,IAAKC,KAAM,IAC5GC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,MAAO,IAAKC,MAAO,GAAIC,KAAM,IAAKC,QAAS,IAAKC,OAAQ,KAC5FC,I,oTACJ,aAAYC,GAAO,IAAD,kJAClB,mBAAMA,IACCC,MAAQ,CAAEC,OAAQ,CAAC,KAFR,E,iLAIRC,OACR,IAAIC,IAAOD,MAAME,OAAOC,GACpBC,UAAYC,KAAKP,MAAMC,OAAOM,KAAKP,MAAMC,OAAOO,OAAO,GAC3D,GAAI,QAAQC,KAAKN,KAAOI,KAAKG,SAAS,CAAET,OAAQ,CAAC,WAC5C,GAAI,QAAQQ,KAAKN,KACtBI,KAAKG,SAAS,CAAET,OAAQM,KAAKP,MAAMC,OAAOU,OAAO,IAAKC,KAAKL,KAAKP,MAAMC,OAAOY,KAAK,aAE9E,GAAIN,KAAKP,MAAMC,OAAOY,KAAK,IAAIC,SAAS,KAAK,CAC9C,GAAI,UAAUL,KAAK9B,OAAOwB,MAAO,OAC7B,OAAOM,KAAKN,KAAOI,KAAKG,SAAU,CAAET,OAAQ,CAAC,MAC3CM,KAAKG,SAAS,CAAET,OAAQM,KAAKP,MAAMC,OAAOc,MAAMR,KAAKP,MAAMC,OAAOe,QAAQ,KAAK,GAAGL,OAAOhC,OAAOwB,YAGhG,+BAA+BM,KAAKN,MACrC,KAAKM,KAAKH,YACVC,KAAKG,SAAS,CAAET,OAAQM,KAAKP,MAAMC,OAAOU,OAAOhC,OAAOwB,QAEvD,WAAWM,KAAKH,YAAqB,YAAPH,KAC/BI,KAAKG,SAAS,CAAET,OAAQM,KAAKP,MAAMC,OAAOc,MAAM,EAAER,KAAKP,MAAMC,OAAOO,OAAO,GAAGG,OAAOhC,OAAOwB,QAE7F,WAAWM,KAAKN,MAAQ,WAAWM,KAAKH,YACrCC,KAAKG,SAAS,CAAET,OAAQM,KAAKP,MAAMC,OAAOU,OAAOhC,OAAOwB,QAE3D,iBAAiBM,KAAKF,KAAKP,MAAMC,OAAOc,OAAO,GAAG,GAAGJ,OAAOhC,OAAOwB,OAAS,WAAWM,KAAKN,OAC5FI,KAAKG,SAAS,CAAET,OAAQM,KAAKP,MAAMC,OAAOU,OAAOhC,OAAOwB,QAEvD,iBAAiBM,KAAKF,KAAKP,MAAMC,OAAOc,OAAO,GAAGF,KAAK,MACxDN,KAAKG,SAAS,CAAET,OAAQM,KAAKP,MAAMC,OAAOc,MAAM,GAAG,GAAGJ,OAAOhC,OAAOwB,SAGlE,UAAUM,KAAKN,MAAQ,eAAeM,KAAKF,KAAKP,MAAMC,OAAOY,KAAK,OAClE,OAAOJ,KAAKN,MAAS,MAAMM,KAAKF,KAAKP,MAAMC,OAAOY,KAAK,KAClD,QAALV,KAAcI,KAAKG,SAAS,CAAET,OAAQtB,OAAOwB,OAE/CI,KAAKG,SAAS,CAAET,OAAQM,KAAKP,MAAMC,OAAOU,OAAOhC,OAAOwB,W,+BAExD,IAAD,OACN,OACE,mEAAKE,GAAG,aAAR,UACE,mEAAKA,GAAG,SAAR,cAAmBE,KAAKP,MAAMC,OAA9B,OACA,mEAAKI,GAAG,UAAR,cAAoBE,KAAKP,MAAMC,OAAOM,KAAKP,MAAMC,OAAOO,OAAO,GAC3DD,KAAKP,MAAMC,OAAOc,MAAMR,KAAKP,MAAMC,OAAOa,SAAS,KACnDP,KAAKP,MAAMC,OAAOe,QAAQ,KAAK,EAAI,GAAI,OAE1CC,OAAOC,QAAQvC,QAAQwC,KAAI,SAAAC,GAAC,OAAK,mEAAKC,MAAM,MAAMhB,GAAIe,EAAE,GAAIE,QAAS,EAAKC,UAAUC,KAAK,GAAxD,cAAiEJ,EAAE,gB,KAjD3FK,6CAAMC,WAsDxBC,iDAASC,OAAO,2DAAC9B,IAAD,IAAS+B,SAASC,eAAe,W","file":"static/js/main.07af676c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst keypad = {\n  clear: \"AC\", divide: \"/\", multiply: \"*\", seven: \"7\", eight: \"8\", nine: \"9\", subtract: \"-\", four: \"4\", five: \"5\", \n  six: \"6\", add: \"+\", one: \"1\", two: \"2\", three: \"3\", blank: '', zero: \"0\", decimal: \".\", equals: \"=\" }\nclass App extends React.Component{\n  constructor(props){\n  super(props)\n    this.state = { output: [''] }\n  }\n  handleNum(event){\n    let key =  event.target.id\n    let lastIndex = this.state.output[this.state.output.length-1]\n    if (/clear/.test(key)){ this.setState({ output: [''] }) } \n    else if (/equal/.test(key)){\n    this.setState({ output: this.state.output.concat('=', eval(this.state.output.join('') ) ) }) \n    }\n   else if (this.state.output.join('').includes('=')){\n       if (/[1-9]\\./.test(keypad[key])){return }\n       if (/zero/.test(key)){ this.setState ({ output: [''] }) }\n       else {this.setState({ output: this.state.output.slice(this.state.output.indexOf('=')+1).concat(keypad[key]) })\n            }\n     }\n    else if (/divide|multiply|add|subtract/.test(key)){ \n         if(/\\d/.test(lastIndex)){\n            this.setState({ output: this.state.output.concat(keypad[key]) })\n         }\n         if( /[\\+\\*\\/]/.test(lastIndex) && key != 'subtract'){\n            this.setState({ output: this.state.output.slice(0,this.state.output.length-1).concat(keypad[key]) })\n         }\n        if(/subtract/.test(key) && /[\\+\\*\\/]/.test(lastIndex)){\n              this.setState({ output: this.state.output.concat(keypad[key]) })\n           }\n        if(/\\*\\-|\\+\\-|\\/\\-/.test(this.state.output.slice(-1)[0].concat(keypad[key]) && /subtract/.test(key))){\n           this.setState({ output: this.state.output.concat(keypad[key])})\n        }\n        if (/\\*\\-|\\+\\-|\\/\\-/.test(this.state.output.slice(-2).join('')) ){\n           this.setState({ output: this.state.output.slice(0,-2).concat(keypad[key])})\n        }\n    }\n    else if (/decimal/.test(key) && /^\\d+\\.[\\d]*$/.test(this.state.output.join(''))){}\n    else if (/zero/.test(key)  && /^0$/.test(this.state.output.join(''))){\n         if (key!='zero'){ this.setState({ output: keypad[key] }) }\n    }\n    else { this.setState({ output: this.state.output.concat(keypad[key]) }) }\n  }\n  render(){ \n    return (\n      <div id='calculator'>\n        <div id='output'> {this.state.output} </div>\n        <div id='display'> {this.state.output[this.state.output.length-1] ? \n            this.state.output.slice(this.state.output.includes('=')? \n            this.state.output.indexOf('=')+1 : 0): '0'} \n        </div>\n        {Object.entries(keypad).map(i => (<div class=\"num\" id={i[0]} onClick={this.handleNum.bind(this)}> {i[1]}</div>))}\n      </div>\n    )\n  }\n}\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}