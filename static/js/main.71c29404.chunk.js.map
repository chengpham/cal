{"version":3,"sources":["index.js"],"names":["keypad","clear","divide","multiply","seven","eight","nine","subtract","four","five","six","add","one","two","three","blank","zero","decimal","equals","App","props","state","output","input","event","key","target","id","currentIndex","this","current","memory","slice","setState","total","length","concat","console","log","eval","join","toString","test","secondLastChar","substring","Object","entries","map","i","class","onClick","handleNum","bind","React","Component","ReactDOM","render","document","getElementById"],"mappings":"ijDAMMA,OAAS,CACbC,MAAO,KAAMC,OAAQ,IAAKC,SAAU,IAAKC,MAAO,IAAKC,MAAO,IAAKC,KAAM,IAAKC,SAAU,IAAKC,KAAM,IAAKC,KAAM,IAC5GC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,MAAO,IAAKC,MAAO,GAAIC,KAAM,IAAKC,QAAS,IAAKC,OAAQ,KAC5FC,I,oTACJ,aAAYC,GAAO,IAAD,kJAClB,mBAAMA,IACCC,MAAQ,CAAEC,OAAQ,CAAC,IAAKC,MAAO,GAFpB,E,iLAIRC,OACR,IAAIC,IAAOD,MAAME,OAAOC,GACpBC,aAAeC,KAAKR,MAAME,MAC1BO,QAAUD,KAAKR,MAAMC,OAAOM,cAC5BG,OAASF,KAAKR,MAAMC,OAAOU,MAAM,EAAGJ,cACxC,GAAU,SAANH,IAAgBI,KAAKI,SAAS,CAAEX,OAAQ,CAAC,IAAKC,MAAO,SACpD,GAAU,UAANE,IAAe,CACpB,IAAIS,MAAQ,CAAC,IACSA,MAAlBJ,QAAQK,OAAkBJ,OAAOK,OAAON,SAC7BC,OAAOC,MAAM,EAAGD,OAAOI,OAAS,GAC/CE,QAAQC,IAAI,OAAQJ,OACpBL,KAAKI,SAAS,CAAEX,OAAQY,MAAME,OAAO,IAAKG,KAAKL,MAAMM,KAAK,KAAKC,YAAalB,MAAOW,MAAMC,OAAS,SAEjG,GAAS,UAALV,KAAsB,YAALA,KAAwB,OAALA,KAAmB,YAALA,KACvD,GAAIK,QAAQK,OACN,IAAIO,KAAKX,OAAOK,OAAON,UACzBD,KAAKI,SAAS,CAAEX,OAAQ,CAACQ,QAAS9B,OAAOyB,KAAM,IAAKF,MAAO,IAE3DM,KAAKI,SAAS,CAAEX,OAAQS,OAAOK,OAAON,QAAS9B,OAAOyB,KAAM,IAAKF,MAAOK,aAAe,SAGtF,GAAIG,OAAOI,OAAS,EAAE,CACzB,IAAMQ,eAAiBd,KAAKR,MAAMC,OAAOsB,UAAUf,KAAKR,MAAMC,OAAOa,OAAO,EAAGN,KAAKR,MAAMC,OAAOa,OAAO,GAEnG,eAAgBO,KAAKb,KAAKR,MAAMC,OAAOkB,KAAK,IAAIJ,OAAOpC,OAAOyB,OACjEI,KAAKI,SAAS,CAAEX,OAAQS,OAAOC,MAAM,EAAGD,OAAOI,QAAQC,OAAO,OAI9DP,KAAKI,SAAS,CAAEX,OAAQS,OAAOC,MAAM,EAAGD,OAAOI,OAAO,GAAGC,OAAOpC,OAAOyB,KAAK,WAI/E,CACH,IAAKK,QAAQK,QAAiB,QAAPV,IAAiB,OACxC,GAAI,KAAKiB,KAAKZ,UAAmB,WAAPL,IAAmB,OACzCK,QAAQK,QAAU,IAAIO,KAAKX,SAC3BF,KAAKI,SAAS,CAAEX,OAAQ,CAACtB,OAAOyB,MAAOF,MAAO,IAElDM,KAAKI,SAAS,CAAEX,OAAQS,OAAOK,OAAON,QAAQM,OAAOpC,OAAOyB,Y,+BAGvD,IAAD,OACN,OACE,mEAAKE,GAAG,aAAR,UACE,mEAAKA,GAAG,SAAR,cAAmBE,KAAKR,MAAMC,OAA9B,OACA,mEAAKK,GAAG,UAAR,cAAoBE,KAAKR,MAAMC,OAAO,GAAK,iIAAIO,KAAKR,MAAMC,QAAQU,OAAO,GAAG,GAAK,IAAjF,OACCa,OAAOC,QAAQ9C,QAAQ+C,KAAI,SAAAC,GAAC,OAAK,mEAAKC,MAAM,MAAMtB,GAAIqB,EAAE,GAAIE,QAAS,EAAKC,UAAUC,KAAK,GAAxD,cAAiEJ,EAAE,gB,KApD3FK,6CAAMC,WAyDxBC,iDAASC,OAAO,2DAACrC,IAAD,IAASsC,SAASC,eAAe,W","file":"static/js/main.71c29404.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n\nconst keypad = {\n  clear: \"AC\", divide: \"/\", multiply: \"*\", seven: \"7\", eight: \"8\", nine: \"9\", subtract: \"-\", four: \"4\", five: \"5\", \n  six: \"6\", add: \"+\", one: \"1\", two: \"2\", three: \"3\", blank: '', zero: \"0\", decimal: \".\", equals: \"=\" }\nclass App extends React.Component{\n  constructor(props){\n  super(props)\n    this.state = { output: [''], input: 0 }\n  }\n  handleNum(event){\n    let key =  event.target.id\n    let currentIndex = this.state.input\n    let current = this.state.output[currentIndex]\n    let memory = this.state.output.slice(0, currentIndex)\n    if (key =='clear'){ this.setState({ output: [''], input: 0 }) } \n    else if (key =='equals'){\n        let total = ['']\n        if (current.length) { total = memory.concat(current) }\n        else { total = memory.slice(0, memory.length - 1) }\n        console.log('here', total)\n        this.setState({ output: total.concat('=', eval(total.join('')).toString()), input: total.length + 1 })\n    }\n    else if (key==\"divide\" || key==\"multiply\" || key==\"add\" || key==\"subtract\"){\n        if (current.length) {\n          if (/=/.test(memory.concat(current))) {\n            this.setState({ output: [current, keypad[key], \"\"], input: 2 })\n          }  else {\n            this.setState({ output: memory.concat(current, keypad[key], \"\"), input: currentIndex + 2 })\n          }\n        }\n        else if (memory.length > 1){\n          const secondLastChar = this.state.output.substring(this.state.output.length-2, this.state.output.length-1)\n          // PROBLEM BELOW HERE \" 5*-+5\" INSTEAD OF \" 5*-5\". NEED NOT INCLUDE OPERATOR AFTER ' - '\n          if ((/\\/*\\**\\+*\\-$/).test(this.state.output.join('').concat(keypad[key]))){\n            this.setState({ output: memory.slice(0, memory.length).concat('-') })\n           // PROBLEM ABOVE HERE\n          }\n          else{\n            this.setState({ output: memory.slice(0, memory.length-1).concat(keypad[key],'') })\n          }\n        } \n    }\n    else { \n      if (!current.length && key == \"zero\") { return }\n      if (/\\./.test(current) && key == \"decimal\"){ return }\n      if (current.length && /=/.test(memory)){\n          this.setState({ output: [keypad[key]], input: 0 })\n      }\n      this.setState({ output: memory.concat(current.concat(keypad[key])) }) \n    }\n  }\n  render(){ \n    return (\n      <div id='calculator'>\n        <div id='output'> {this.state.output} </div>\n        <div id='display'> {this.state.output[0] ? [...this.state.output].slice(-1)[0] : '0'} </div>\n        {Object.entries(keypad).map(i => (<div class=\"num\" id={i[0]} onClick={this.handleNum.bind(this)}> {i[1]}</div>))}\n      </div>\n    )\n  }\n}\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}